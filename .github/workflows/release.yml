name: Release Build

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: '发布版本号'
        required: true
        default: '1.0.0'
      release_notes:
        description: '发布说明'
        required: false
        default: '新版本发布'

jobs:
  prepare-release:
    name: 准备发布
    runs-on: macos-latest
    
    outputs:
      version: ${{ steps.version.outputs.version }}
      build_number: ${{ steps.version.outputs.build_number }}
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置版本信息
      id: version
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          VERSION="${{ github.event.release.tag_name }}"
          VERSION=${VERSION#v} # 移除v前缀
        else
          VERSION="${{ github.event.inputs.version }}"
        fi
        
        BUILD_NUMBER=$(date +%Y%m%d%H%M)
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
        
        echo "📱 版本信息:"
        echo "版本号: $VERSION"
        echo "构建号: $BUILD_NUMBER"
        
    - name: 更新项目版本
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        BUILD_NUMBER="${{ steps.version.outputs.build_number }}"
        
        # 更新Info.plist中的版本信息
        /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION" LocationChanger/Info.plist
        /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $BUILD_NUMBER" LocationChanger/Info.plist
        
        echo "✅ 版本信息已更新"
        
    - name: 提交版本更新
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add LocationChanger/Info.plist
        git commit -m "chore: 更新版本到 ${{ steps.version.outputs.version }} (构建号: ${{ steps.version.outputs.build_number }})" || echo "无需提交"
        
  build-release:
    name: 构建发布版本
    runs-on: macos-latest
    needs: prepare-release
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0'
        
    - name: 缓存构建依赖
      uses: actions/cache@v3
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData
          ~/.spm
        key: ${{ runner.os }}-xcode-${{ hashFiles('**/project.pbxproj') }}
        restore-keys: |
          ${{ runner.os }}-xcode-
          
    - name: 构建Release版本
      run: |
        echo "🔨 开始构建Release版本..."
        
        xcodebuild clean build \
          -project LocationChanger.xcodeproj \
          -scheme LocationChanger \
          -configuration Release \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=18.0' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          | xcpretty
          
        if [ $? -eq 0 ]; then
          echo "✅ Release版本构建成功！"
        else
          echo "❌ Release版本构建失败！"
          exit 1
        fi
        
    - name: 创建归档
      run: |
        echo "📦 创建项目归档..."
        
        # 创建源码包
        zip -r LocationChanger-Source-${{ needs.prepare-release.outputs.version }}.zip \
          LocationChanger/ \
          LocationChanger.xcodeproj/ \
          README.md \
          .github/ \
          -x "*/DerivedData/*" "*/build/*" "*/.DS_Store"
          
        echo "✅ 源码包创建完成"
        
    - name: 生成发布说明
      run: |
        cat > RELEASE_NOTES.md << EOF
        # 虚拟定位 v${{ needs.prepare-release.outputs.version }}
        
        ## 📱 应用信息
        - **版本号**: ${{ needs.prepare-release.outputs.version }}
        - **构建号**: ${{ needs.prepare-release.outputs.build_number }}
        - **构建时间**: $(date '+%Y-%m-%d %H:%M:%S')
        - **iOS最低版本**: 18.0
        
        ## 🎯 主要功能
        - ✅ 虚拟定位设置和切换
        - ✅ 地图交互和位置选择
        - ✅ 智能位置搜索功能
        - ✅ 预设热门位置
        - ✅ 历史记录管理
        - ✅ 收藏位置功能
        - ✅ 个性化设置选项
        
        ## 📋 技术特性
        - 🎨 现代化iOS界面设计
        - 🗺️ MapKit地图集成
        - 📍 CoreLocation定位服务
        - 💾 本地数据持久化
        - 🔒 位置权限管理
        
        ## 📥 安装说明
        1. 下载源码包
        2. 使用Xcode 16.0+打开项目
        3. 连接iOS设备或选择模拟器
        4. 点击运行按钮进行安装
        
        ## ⚠️ 重要提醒
        本应用仅供开发测试使用，请勿用于违法用途。使用前请了解相关法律法规。
        
        ---
        
        ${{ github.event.inputs.release_notes || github.event.release.body || '新版本发布' }}
        EOF
        
    - name: 上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: LocationChanger-Release-${{ needs.prepare-release.outputs.version }}
        path: |
          LocationChanger-Source-${{ needs.prepare-release.outputs.version }}.zip
          RELEASE_NOTES.md
        retention-days: 90
        
    - name: 创建GitHub Release (如果是手动触发)
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ needs.prepare-release.outputs.version }}
        name: 虚拟定位 v${{ needs.prepare-release.outputs.version }}
        body_path: RELEASE_NOTES.md
        files: |
          LocationChanger-Source-${{ needs.prepare-release.outputs.version }}.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  notify-release:
    name: 发布通知
    runs-on: ubuntu-latest
    needs: [prepare-release, build-release]
    if: always()
    
    steps:
    - name: 发布成功通知
      if: needs.build-release.result == 'success'
      run: |
        echo "🎉 虚拟定位应用发布成功！"
        echo ""
        echo "📱 版本信息:"
        echo "版本号: ${{ needs.prepare-release.outputs.version }}"
        echo "构建号: ${{ needs.prepare-release.outputs.build_number }}"
        echo "发布时间: $(date)"
        echo ""
        echo "🔗 下载链接:"
        echo "GitHub Releases: https://github.com/${{ github.repository }}/releases"
        echo ""
        echo "📖 使用说明:"
        echo "请查看README.md文件获取详细的使用说明和安装指南"
        
    - name: 发布失败通知
      if: needs.build-release.result == 'failure'
      run: |
        echo "❌ 虚拟定位应用发布失败！"
        echo "请检查构建日志获取详细错误信息"